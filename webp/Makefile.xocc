
# cxx compiler
CXX := $(WEBP_CXX)

# xocc compiler
XOCC := $(WEBP_SDX)/bin/xocc 

# platform and device
PLATFORM := $(WEBP_DSA)
DEVICE := $(WEBP_DSA)

# c++ compiler flags
CXXFLAGS := -DWEBP_NBINSTANCES=$(WEBP_NBINSTANCES) -DWEBPDSA=\"$(DEVICE)\" -g
CXXFLAGS += -I $(WEBP_SDX)/Vivado_HLS/include -I $(WEBP_SDX)/runtime/include/1_2 -I ./src/
CXXFLAGS += -Wall -fpermissive -DHAVE_MALLOC_H -DHAVE_PTHREAD -DWEBP_HAVE_PNG -DWEBP_HAVE_TIFF \
            -DWEBP_USE_THREAD -DWEBP_HAVE_GIF -DFPGA_DEVICE 
CXXFLAGS += -L $(WEBP_SDX)/runtime/lib/x86_64 -L $(WEBP_SDX)/lib/lnx64.o -lxilinxopencl -pthread -lpng

# xocc compiler flags
XOCCFLAGS := --xp "param:compiler.preserveHlsOutput=1" \
             --xp "param:compiler.generateExtraRunData=true" -s

ifeq ($(shell expr $(WEBP_NBINSTANCES) \>= 1), 1)
XOCCFLAGS := $(XOCCFLAGS) \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_1_1.M_AXI_GMEM0.core.OCL_REGION_0.M03_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_1_1.M_AXI_GMEM1.core.OCL_REGION_0.M03_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_1_1.M_AXI_GMEM2.core.OCL_REGION_0.M03_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_1_1.M_AXI_GMEM3.core.OCL_REGION_0.M03_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_1_1.M_AXI_GMEM4.core.OCL_REGION_0.M03_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_1_1.M_AXI_GMEM5.core.OCL_REGION_0.M03_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_1_1.M_AXI_GMEM0.core.OCL_REGION_0.M03_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_1_1.M_AXI_GMEM1.core.OCL_REGION_0.M03_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_1_1.M_AXI_GMEM2.core.OCL_REGION_0.M03_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_1_1.M_AXI_GMEM3.core.OCL_REGION_0.M03_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_1_1.M_AXI_GMEM4.core.OCL_REGION_0.M03_AXI 
endif

ifeq ($(shell expr $(WEBP_NBINSTANCES) \>= 2), 1)
XOCCFLAGS := $(XOCCFLAGS) \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_2_1.M_AXI_GMEM0.core.OCL_REGION_0.M02_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_2_1.M_AXI_GMEM1.core.OCL_REGION_0.M02_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_2_1.M_AXI_GMEM2.core.OCL_REGION_0.M02_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_2_1.M_AXI_GMEM3.core.OCL_REGION_0.M02_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_2_1.M_AXI_GMEM4.core.OCL_REGION_0.M02_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_2_1.M_AXI_GMEM5.core.OCL_REGION_0.M02_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_2_1.M_AXI_GMEM0.core.OCL_REGION_0.M02_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_2_1.M_AXI_GMEM1.core.OCL_REGION_0.M02_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_2_1.M_AXI_GMEM2.core.OCL_REGION_0.M02_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_2_1.M_AXI_GMEM3.core.OCL_REGION_0.M02_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_2_1.M_AXI_GMEM4.core.OCL_REGION_0.M02_AXI 
endif

ifeq ($(shell expr $(WEBP_NBINSTANCES) \>= 3), 1)
XOCCFLAGS := $(XOCCFLAGS) \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_3_1.M_AXI_GMEM0.core.OCL_REGION_0.M00_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_3_1.M_AXI_GMEM1.core.OCL_REGION_0.M00_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_3_1.M_AXI_GMEM2.core.OCL_REGION_0.M00_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_3_1.M_AXI_GMEM3.core.OCL_REGION_0.M00_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_3_1.M_AXI_GMEM4.core.OCL_REGION_0.M00_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_3_1.M_AXI_GMEM5.core.OCL_REGION_0.M00_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_3_1.M_AXI_GMEM0.core.OCL_REGION_0.M00_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_3_1.M_AXI_GMEM1.core.OCL_REGION_0.M00_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_3_1.M_AXI_GMEM2.core.OCL_REGION_0.M00_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_3_1.M_AXI_GMEM3.core.OCL_REGION_0.M00_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_3_1.M_AXI_GMEM4.core.OCL_REGION_0.M00_AXI 
endif

ifeq ($(shell expr $(WEBP_NBINSTANCES) \>= 4), 1)
XOCCFLAGS := $(XOCCFLAGS) \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_4_1.M_AXI_GMEM0.core.OCL_REGION_0.M01_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_4_1.M_AXI_GMEM1.core.OCL_REGION_0.M01_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_4_1.M_AXI_GMEM2.core.OCL_REGION_0.M01_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_4_1.M_AXI_GMEM3.core.OCL_REGION_0.M01_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_4_1.M_AXI_GMEM4.core.OCL_REGION_0.M01_AXI \
             --xp misc:map_connect=add.kernel.kernel_IntraPredLoop2_NoOut_4_1.M_AXI_GMEM5.core.OCL_REGION_0.M01_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_4_1.M_AXI_GMEM0.core.OCL_REGION_0.M01_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_4_1.M_AXI_GMEM1.core.OCL_REGION_0.M01_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_4_1.M_AXI_GMEM2.core.OCL_REGION_0.M01_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_4_1.M_AXI_GMEM3.core.OCL_REGION_0.M01_AXI \
             --xp misc:map_connect=add.kernel.kernel_2_ArithmeticCoding_4_1.M_AXI_GMEM4.core.OCL_REGION_0.M01_AXI 
endif

# host src
cwebp_SRCS= src/dec/alpha.c \
            src/dec/buffer.c \
            src/dec/frame.c \
            src/dec/idec.c \
            src/dec/io.c \
            src/dec/quant.c \
            src/dec/tree.c \
            src/dec/vp8.c \
            src/dec/vp8l.c \
            src/dec/webp.c \
            src/demux/anim_decode.c \
            src/demux/demux.c \
            src/dsp/alpha_processing.c \
            src/dsp/alpha_processing_mips_dsp_r2.c\
            src/dsp/alpha_processing_sse2.c \
            src/dsp/alpha_processing_sse41.c \
            src/dsp/cpu.c \
            src/dsp/dec.c \
            src/dsp/dec_clip_tables.c \
            src/dsp/dec_mips32.c \
            src/dsp/dec_mips_dsp_r2.c \
            src/dsp/dec_neon.c \
            src/dsp/dec_sse2.c \
            src/dsp/dec_sse41.c \
            src/dsp/filters.c \
            src/dsp/filters_mips_dsp_r2.c \
            src/dsp/filters_sse2.c\
            src/dsp/lossless.c \
            src/dsp/lossless_mips_dsp_r2.c \
            src/dsp/lossless_neon.c \
            src/dsp/lossless_sse2.c \
            src/dsp/rescaler.c \
            src/dsp/rescaler_mips32.c \
            src/dsp/rescaler_mips_dsp_r2.c \
            src/dsp/rescaler_neon.c \
            src/dsp/rescaler_sse2.c \
            src/dsp/upsampling.c \
            src/dsp/upsampling_mips_dsp_r2.c \
            src/dsp/upsampling_neon.c \
            src/dsp/upsampling_sse2.c \
            src/dsp/yuv.c \
            src/dsp/yuv_mips32.c \
            src/dsp/argb.c \
            src/dsp/argb_mips_dsp_r2.c \
            src/dsp/argb_sse2.c \
            src/dsp/yuv_mips_dsp_r2.c \
            src/dsp/yuv_sse2.c \
            src/dsp/cost.c \
            src/dsp/cost_mips32.c \
            src/dsp/cost_mips_dsp_r2.c \
            src/dsp/cost_sse2.c \
            src/dsp/enc.c \
            src/dsp/enc_avx2.c \
            src/dsp/enc_mips32.c \
            src/dsp/enc_mips_dsp_r2.c \
            src/dsp/enc_neon.c \
            src/dsp/enc_sse2.c \
            src/dsp/enc_sse41.c \
            src/dsp/lossless_enc.c \
            src/dsp/lossless_enc_mips32.c \
            src/dsp/lossless_enc_mips_dsp_r2.c \
            src/dsp/lossless_enc_neon.c \
            src/dsp/lossless_enc_sse2.c \
            src/dsp/lossless_enc_sse41.c \
            src/enc/alpha.c \
            src/enc/analysis.c \
            src/enc/backward_references.c \
            src/enc/config.c \
            src/enc/cost.c \
            src/enc/delta_palettization.c \
            src/enc/filter.c \
            src/enc/frame.c \
            src/enc/histogram.c \
            src/enc/iterator.c \
            src/enc/near_lossless.c \
            src/enc/picture.c \
            src/enc/picture_csp.c \
            src/enc/picture_psnr.c \
            src/enc/picture_rescale.c \
            src/enc/picture_tools.c \
            src/enc/quant.c \
            src/enc/syntax.c \
            src/enc/token.c\
            src/enc/tree.c \
            src/enc/vp8l.c \
            src/enc/webpenc.c \
            examples/jpegdec.c \
            examples/metadata.c \
            examples/pngdec.c \
            examples/webpdec.c \
            examples/example_util.c \
            src/mux/anim_encode.c \
            src/mux/muxedit.c \
            src/mux/muxinternal.c \
            src/mux/muxread.c \
            src/utils/bit_reader.c \
            src/utils/color_cache.c \
            src/utils/filters.c \
            src/utils/huffman.c \
            src/utils/quant_levels_dec.c \
            src/utils/random.c \
            src/utils/rescaler.c \
            src/utils/thread.c \
            src/utils/utils.c \
            src/utils/bit_writer.c \
            src/utils/huffman_encode.c \
            src/utils/quant_levels.c \
            examples/cwebp.c \
            examples/wicdec.c \
            examples/create_kernel.c \
            src/enc/kernel/oclHelper.cpp \
            src/enc/kernel/oclErrorCodes.cpp \
            src/utils/profiling.c \
            src_syn/vp8_hls_syn.cpp

cwebp_HDRS=examples/anim_util.h \
           examples/example_util.h \
           examples/jpegdec.h \
           examples/metadata.h \
           examples/pngdec.h \
           examples/stopwatch.h \
           examples/webpdec.h \
           examples/wicdec.h \
           examples/create_kernel.h \
           src/webp/decode.h \
           src/webp/demux.h \
           src/webp/encode.h \
           src/webp/extras.h \
           src/webp/mux.h \
           src/webp/mux_types.h \
           src/webp/types.h \
           src/dec/alphai.h \
           src/dec/common.h \
           src/dec/decode_vp8.h \
           src/dec/vp8i.h \
           src/dec/vp8li.h \
           src/dec/webpi.h \
           src/dsp/dsp.h \
           src/dsp/lossless.h \
           src/dsp/mips_macro.h \
           src/dsp/neon.h \
           src/dsp/yuv.h \
           src/enc/backward_references.h \
           src/enc/cost.h \
           src/enc/delta_palettization.h \
           src/enc/histogram.h \
           src/enc/vp8enci.h \
           src/enc/vp8li.h \
           src/mux/muxi.h \
           src/utils/bit_reader.h \
           src/utils/bit_reader_inl.h \
           src/utils/bit_writer.h \
           src/utils/color_cache.h \
           src/utils/endian_inl.h \
           src/utils/filters.h \
           src/utils/huffman.h \
           src/utils/huffman_encode.h \
           src/utils/quant_levels.h \
           src/utils/quant_levels_dec.h \
           src/utils/random.h \
           src/utils/rescaler.h \
           src/utils/thread.h \
           src/utils/utils.h \
           src/webp/format_constants.h\
           src_syn/vp8_hls_syn.h \
           src_syn/vp8_hls_syn2.h

# kernel src
krnl_SRCS = ./src_syn/vp8_hls_syn.cpp

# target
EXE_GOALS := cwebp
XCLBIN_GOALS := kernel.xclbin

# host + kernel + json
compile: $(EXE_GOALS) $(XCLBIN_GOALS) json
		@echo ' '	 
		@echo 'Compiling cwebp and kernel.xclbin...'

# host
$(EXE_GOALS): $(cwebp_SRCS) $(cwebp_HDRS)
	$(CXX) $(CXXFLAGS) -w -o $@ $(cwebp_SRCS) 

# kernel
predkernel_name := kernel_IntraPredLoop2_NoOut
ackernel_name := kernel_2_ArithmeticCoding

XOOBJS := 
ifeq ($(shell expr $(WEBP_NBINSTANCES) \>= 1), 1)
    XOOBJS := $(XOOBJS) $(predkernel_name)_1.xo $(ackernel_name)_1.xo
endif
ifeq ($(shell expr $(WEBP_NBINSTANCES) \>= 2), 1)
    XOOBJS := $(XOOBJS) $(predkernel_name)_2.xo $(ackernel_name)_2.xo
endif
ifeq ($(shell expr $(WEBP_NBINSTANCES) \>= 3), 1)
    XOOBJS := $(XOOBJS) $(predkernel_name)_3.xo $(ackernel_name)_3.xo
endif
ifeq ($(shell expr $(WEBP_NBINSTANCES) \>= 4), 1)
    XOOBJS := $(XOOBJS) $(predkernel_name)_4.xo $(ackernel_name)_4.xo
endif

$(XCLBIN_GOALS): $(XOOBJS)
	$(XOCC) $(XOCCFLAGS) --platform $(PLATFORM) --link -o $@ \
		-t $(WEBP_TARGET) $^ --kernel_frequency $(WEBP_FREQUENCY)

$(predkernel_name)_%.xo: $(krnl_SRCS)
	$(XOCC) $(XOCCFLAGS) --platform $(PLATFORM) --compile -o $@ \
		-t $(WEBP_TARGET) -k $(patsubst %.xo,%,$@) --kernel_frequency $(WEBP_FREQUENCY) $^

$(ackernel_name)_%.xo: $(krnl_SRCS)
	$(XOCC) $(XOCCFLAGS) --platform $(PLATFORM) --compile -o $@ \
		-t $(WEBP_TARGET) -k $(patsubst %.xo,%,$@) --kernel_frequency $(WEBP_FREQUENCY) $^

# json
json:
	@echo '${\n} Generating emconfig.json ...'
	$(WEBP_SDX)/bin/emconfigutil --xdevice $(DEVICE) --nd 1 

# clean
clean:
	rm -rf $(EXE_GOALS) $(XCLBIN_GOALS) sdaccel_* *.ll _xocc_* *.xo json
